# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
# See https://tox.readthedocs.io/en/latest/config.html for reference.

[tox]

# Environments run by default and in this order
#  unless specified via CLI -eENVLIST
#  or environment variable TOXENV
envlist =
    clean
    # tests
    base
    petab
    optimize
    # quality
    project
    flake8
    doc
    size
    # notebooks
    notebooks1
    notebooks2

# Base-environment

[testenv]

# Sub-environments
#  inherit settings defined in the base

[testenv:clean]
skip_install = true
allowlist_externals =
    rm
deps = coverage
commands =
    coverage erase
    rm -rf .coverage*
    rm -rf coverage.xml
description =
    Clean up before tests

# Unit tests

[testenv:base]
extras = test,amici,petab,pymc3,emcee,mltools
commands =
    pytest --cov=pypesto --cov-report=xml --cov-append \
        test/base test/profile test/sample test/visualize -s
description =
    Test basic functionality

[testenv:petab]
extras = test,test_petab,amici,petab,pyswarm
commands =
    # install pysb
    pip install \
      git+https://github.com/pysb/pysb.git@c434f6ab98301beee1bf9d2a5093f0c79da78824#egg=pysb
    pytest --cov=pypesto --cov-report=xml --cov-append \
        test/petab -s
description =
    Test PEtab functionality

[testenv:optimize]
extras = test,dlib,pyswarm,cmaes,nlopt,fides,mpi
commands =
    # workaround as ipopt has incomplete build
    pip install git+https://github.com/mechmotum/cyipopt.git@master
    pytest --cov=pypesto --cov-report=xml --cov-append \
        test/optimize -s
description =
    Test optimization module

[testenv:notebooks1]
allowlist_externals = bash
extras = example,amici,petab,pyswarm,pymc3,cmaes,nlopt,fides
commands =
    # workaround as ipopt has incomplete build
    pip install git+https://github.com/mechmotum/cyipopt.git@master
    bash test/run_notebook.sh 1
description =
    Run notebooks 1

[testenv:notebooks2]
allowlist_externals = bash
extras = example,amici,petab,pymc3,emcee
commands =
    bash test/run_notebook.sh 2
description =
    Run notebooks 2

# Style, management, docs

[testenv:project]
skip_install = true
deps =
    pyroma
commands =
    pyroma --min=10 .
description =
    Check the package friendliness

[testenv:flake8]
skip_install = true
deps =
    flake8 >= 3.8.3
    flake8-bandit >= 2.1.2
    flake8-bugbear >= 20.1.4
    flake8-colors >= 0.1.6
    # flake8-commas >= 2.0.0
    flake8-comprehensions >= 3.2.3
    flake8-print >= 3.1.4
    # flake8-docstrings >= 1.5.0
commands =
    flake8 pypesto test setup.py
description =
    Run flake8 with various plugins

[testenv:doc]
extras =
    doc
commands =
    sphinx-build -W -b html doc/ doc/_build/html
description =
    Test whether docs build passes

[testenv:size]
skip_install = true
allowlist_externals = bash
commands =
    bash test/check_git_size.sh
description =
    Check repository size
